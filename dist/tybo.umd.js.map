{"version":3,"file":"tybo.umd.js","sources":["../lib/app/javascript/controllers/attachments_controller.js","../lib/app/javascript/controllers/dropdown_controller.js","../lib/app/javascript/controllers/flash_controller.js","../lib/app/javascript/controllers/questions_controller.js"],"sourcesContent":["import { Controller } from \"@hotwired/stimulus\"\nimport { FetchRequest, patch } from '@rails/request.js'\n\nexport default class extends Controller {\n  static values = { url: String, method: String, attachmentId: Number }\n\n  async toggle(event) {\n    event.preventDefault()\n\n    const request = new FetchRequest(this.methodValue, this.urlValue, {responseKind: \"turbo-stream\", body: { attachment_id: this.attachmentIdValue}})\n    const response = await request.perform()\n    if (response.ok) {}\n  }\n}\n","import { Controller } from \"@hotwired/stimulus\"\n\nexport default class extends Controller {\n  static targets = [\"menu\"]\n\n  toggle() {\n    this.menuTarget.classList.toggle(\"hidden\")\n    // this.element.textContent = \"Hello World!\"\n  }\n  // close() {\n  //   this.menuTarget.classList.add(\"hidden\")\n  // }\n}\n","import { Controller } from \"@hotwired/stimulus\";\n\nexport default class extends Controller {\n    dismiss() {\n        this.element.remove();\n    }\n}\n","import { Controller } from \"@hotwired/stimulus\"\n\nexport default class extends Controller {\n  static targets = ['questionKind', 'questionType', 'newQuestion', 'choices', 'documentType']\n\n  changeType(e) {\n    let questionType = e.target.selectedOptions[0].value\n    let kindInput = this.questionKindTarget\n    this.getKindInput(questionType, kindInput)\n  }\n\n\n  getKindInput(questionType, kindInput) {\n    fetch(`/admin/questions/kinds?type=${questionType}`, {\n      method: 'GET',\n    }).then(response => response.json())\n      .then(data => {\n        kindInput.options.length = 0 // reset options in select\n        data.unshift('')\n        for (let i in data) { // feed options in select with data array\n          kindInput.options[kindInput.options.length] = new Option(data[i][0], data[i][1]);\n        }\n        this.displayChoiceBtn()\n      })\n  }\n  changeKind() {\n    this.displayChoiceBtn()\n    this.removeChoices()\n  }\n\n  removeChoices() {\n    document.getElementById('choices').innerHTML = ''\n  }\n\n  updateChoicePartial() {\n    let questionKind = this.questionKindTarget.selectedOptions[0].value\n    let questionType = this.questionTypeTarget.selectedOptions[0].value\n    let choices = this.choicesTarget\n    fetch(`/admin/questions/update_nested_form?type=${questionType}&kind=${questionKind}`, {\n      method: 'GET',\n    }).then(response => response.json())\n      .then(data => {\n        choices.innerHTML = data\n      })\n  }\n  displayChoiceBtn() {\n    let questionKind = this.questionKindTarget.selectedOptions[0].value\n    let questionType = this.questionTypeTarget.selectedOptions[0].value\n    let btn = document.getElementById('add-choice')\n    if (Boolean(questionKind) && Boolean(questionType) && questionType != \"Questions::Input\") {\n      btn.classList.remove('hidden')\n    } else {\n      btn.classList.add('hidden')\n    }\n  }\n\n  addQuestion() {\n    this.newQuestionTargets[0].classList.remove('hidden')\n    location.hash = \"#\" + 'newQuestion';\n  }\n}\n"],"names":["toggle","event","_this2","this","preventDefault","request","FetchRequest","methodValue","urlValue","responseKind","body","attachment_id","attachmentIdValue","perform","response","Controller","_default","values","url","String","method","attachmentId","Number","menuTarget","classList","targets","_Controller","apply","arguments","_inheritsLoose","prototype","dismiss","element","remove","changeType","e","getKindInput","target","selectedOptions","value","questionKindTarget","_proto","questionType","kindInput","_this","fetch","then","json","data","i","options","length","unshift","displayChoiceBtn","changeKind","removeChoices","document","getElementById","innerHTML","updateChoicePartial","choices","choicesTarget","questionTypeTarget","questionKind","btn","Boolean","add","addQuestion","newQuestionTargets","location","hash"],"mappings":"0pBAMQA,OAAM,SAACC,GAAO,IAAA,IAAAC,EAGeC,KAFjCF,EAAMG,iBAEN,IAAaC,EAAG,IAAgBC,eAACJ,EAAKK,YAAaL,EAAKM,SAAU,CAACC,aAAc,eAAgBC,KAAM,CAAEC,cAAeT,EAAKU,qBACtGP,OAAAA,QAAAA,QAAAA,EAAQQ,yBAAzBC,GAER,GAAC,uCAT0BC,EAAUA,YAAAC,EAC9BC,OAAS,CAAEC,IAAKC,OAAQC,OAAQD,OAAQE,aAAcC,QCC7DtB,IAAAA,eAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,IAAAA,CAGC,OAHDA,EAAAA,EAAAA,GAAAA,EAAAA,UAAAA,OAAA,WACEG,KAAKoB,WAAWC,UAAUxB,OAAO,SAEnC,EAACgB,CAAA,CAHDhB,CAH2Be,EAAAA,YAAUC,EAC9BS,QAAU,CAAC,QCH4BT,IAAAA,eAAA,SAAAU,GAAA,SAAAV,IAAA,OAAAU,EAAAC,MAAAxB,KAAAyB,YAAAzB,IAAA,QAAA0B,EAAAb,EAAAU,GAAAV,EAAAc,UAG5CC,QAAA,WACI5B,KAAK6B,QAAQC,QACjB,IAL4C,CAEnBlB,EAAUA,kHCAVA,SAG3BmB,WAAA,SAAWC,GAGThC,KAAKiC,aAFcD,EAAEE,OAAOC,gBAAgB,GAAGC,MAC/BpC,KAAKqC,mBAEvB,EAACC,EAGDL,aAAA,SAAaM,EAAcC,GAAW,IAAAC,EAAAzC,KACpC0C,MAAqCH,+BAAAA,EAAgB,CACnDtB,OAAQ,QACP0B,KAAK,SAAAhC,UAAoBA,EAACiC,MAAM,GAChCD,KAAK,SAAAE,GAGJ,IAAK,IAAKC,KAFVN,EAAUO,QAAQC,OAAS,EAC3BH,EAAKI,QAAQ,MAEXT,EAAUO,QAAQP,EAAUO,QAAQC,QAAU,WAAWH,EAAKC,GAAG,GAAID,EAAKC,GAAG,IAE/EL,EAAKS,kBACP,EACJ,EACAC,EAAAA,WAAA,WACEnD,KAAKkD,mBACLlD,KAAKoD,eACP,EAEAA,EAAAA,cAAA,WACEC,SAASC,eAAe,WAAWC,UAAY,EACjD,EAACjB,EAEDkB,oBAAA,WACE,IAEWC,EAAGzD,KAAK0D,cACnBhB,kDAFmB1C,KAAK2D,mBAAmBxB,gBAAgB,GAAGC,MAEA,SAH3CpC,KAAKqC,mBAAmBF,gBAAgB,GAAGC,MAGyB,CACrFnB,OAAQ,QACP0B,KAAK,SAAAhC,GAAYA,OAAAA,EAASiC,MAAM,GAChCD,KAAK,SAAAE,GACJY,EAAQF,UAAYV,CACtB,EACJ,EAACP,EACDY,iBAAA,WACE,IAAIU,EAAe5D,KAAKqC,mBAAmBF,gBAAgB,GAAGC,MAC9CG,EAAGvC,KAAK2D,mBAAmBxB,gBAAgB,GAAGC,MACvDyB,EAAGR,SAASC,eAAe,cAC9BQ,QAAQF,IAAiBE,QAAQvB,IAAiC,oBAAhBA,EACpDsB,EAAIxC,UAAUS,OAAO,UAErB+B,EAAIxC,UAAU0C,IAAI,SAEtB,EAEAC,EAAAA,YAAA,WACEhE,KAAKiE,mBAAmB,GAAG5C,UAAUS,OAAO,UAC5CoC,SAASC,KAAO,cAClB,EAzD2BvD,CAAAA,EAAAA,EAAAA,cACpBU,QAAU,CAAC,eAAgB,eAAgB,cAAe,UAAW"}